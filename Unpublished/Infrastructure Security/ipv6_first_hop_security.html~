<h1>IPv6 First Hop Security</h1>
The number of IPv6 deployments is increasing as the number of devices accessing networks has increased exponentially and the number of IPv6 public addresses gets exhausted. The introduction of Internet of Things (IoT) has accelerated the need for IPv6 in networks.

With all these devices gaining access to networks, security concerns are growing in IPv6 deployments. It is important that these IPv6 deployments are secured for optimum operation of these networks. A critical part of the network that needs to be considered when implementing security mechanisms is at the local links (Layer 2) where hosts are connected to the network.

IPv6 features such as ICMPv6 Neighbor Discovery’s Neighbor Solicitation (NS), Neighbor Advertisement (NA) messages and Router Discovery Router Solicitation (RS) and Router Advertisement (RA) advertisements introduce attack options that were previously not possible in IPv4.

 

IPv6 First Hop Attack Surface
IPv6 first hop security concerns on the local links are usually associated with router discovery, neighbor discovery and DHCPv6.

 
1. Router Discovery Attacks
Router discovery is a means for hosts to locate routers that reside on a local link. Security concerns with router discovery include attacks on ICMPv6 Router Discovery (RD) and host address allocation using SLAAC (Stateless Address Autoconfiguration).

 
1.1 Router Discovery
Router discovery process;

Steps 1: Host A sends a Router Solicitation (RS) message on its local link to discover local routers connected to its link.

Step 2: A legitimate router R1 responds with a Router Advertisement (RA) with lifetime X to the RS from Host A. Host A installs R1 as its default gateway for duration X.

Step 3: An intruder Rx inserts itself in the local link by connecting to one of the switchports on the local link switch or connecting to the wireless network common to R1 and Host A. Rx can then spoof R1’s RA messages and sends R1’s RA messages with a shorter lifetime Y.

Step 4: When duration Y elapses, Host A will remote R1 as its default gateway.

Step 5: Rx then sends new RA messages with lifetime Z. Host A will receive these RA messages and install Rx as its default gateway.

Step 6: Host A starts to direct traffic to remote networks through Rx as its gateway. Rx can then monitor traffic from Host A.

The above sequence of events is an example of a man-in-the-middle (MiTM) attack on IPv6 local links.

1.2 SLAAC
SLAAC is a mechanism that enables an IPv6 host to obtain an IPv6 address prefix from its local router through one of its local links without the use of all DHCPv6 features.

Unlike DHCPv6, due to the stateless nature of SLAAC, address assignments are not verified before addresses are issued.

Steps involved in a SLAAC attack;

Steps 1: Host A sends a Router Solicitation (RS) message on its local link to discover local routers connected to its link.

Step 2: A legitimate router R1 responds with a Router Advertisement (RA) that provides the IPv6 prefix. 2001:DB8:C0FF:EE::/64 with lifetime X.

Step 3: Host A configures the address 2001:DB8:COFF:EE::2/128 and checks the availability of the address using Duplicate Address Detection (DAD) and begins using this address.

Step 4: An intruder Rx inserts itself in the local link by connecting to one of the switchports on the local link switch or connecting to the wireless network common to R1 and Host A. Rx can then spoof R1’s RA messages and sends R1’s RA messages with a shorter lifetime Y.

Step 5: Host A’s IPv6 address will then expire at the lapse of duration Y.

Step 6: Rx can then send a new RA with a new prefix 2001:DB9:COFF:EA::/64.

Step 7: Upon receiving the new prefix, Host A will configure the address 2001:DB9:COFF:EA::09/128 with R1 still being retained as the default gateway. R1 may block Host A’s network traffic due to the fact that it is from an unknown network.

Step 8:R1 may drop Host A’s traffic resulting in black-holing all network traffic from Host A.

2. Neighbor Discovery Attacks
Similar to RA messages ND messages are used to discover other hosts on the local link. It replaces ARP in IPv6. ND performs DAD and address resolution, neighbor unreachability and redirection. Neighbor discovery messages are mainly Neighbor Solicitation (NS) and Neighbor Advertisement (NA).

ND Attacks usually involve Address Resolution, Duplicate Address Detection and Neighbor Cache attacks.

2.1 Address Resolution Attacks
Address resolution is the process that a host (Host A) follows when it wants to send network traffic to another host (Host B) on the local link when it does not know its Layer 2 address (MAC address in Ethernet networks). Host A resolves the IPv6 address of Host B into a MAC address and forwards the packet with Host B’s MAC address as the destination address of the Layer 2 frame.

Stages in IPv6 address resolution attacks include the following;

Step 1: Host A sends a Neighbor Solicitation message on the local link requesting for Host B’s link local address. Host B sends a Neighbor Advertisement (NA) message on the local link containing its MAC address which Host A stores in its neighbor table binding the MAC address with the IPv6 address.

Step 2: If a malicious Host X inserts itself into the local network, it can masquerade as Host B and intercept all packets sent to Host B. Without effective IPv6 first-hop security, Host X can perform a Man-in-the-Middle (MiTM) attack.

Step 3: Host A will attempt to send packets destined to Host B but using Host X’s link-layer address.

2.2 Duplicate Address Detection Attacks
Duplicate Address Detection (DAD) is an IPv6 protocol that enables a host to detect a duplicate address on the local network. DAD attacks are usually aimed at preventing hosts from having IPv6 addresses. Steps involved in deploying a DAD attack;

Step 1: Host A wants to use the address 2001:DB8:C0FF:EE::1. So it sends an NS message on its local link to determine if any other host is using this address. If no NA response is received from other hosts on the local link, Host A will go ahead to use this address.

Step 2: However, malicious host Host X which has inserted itself on the local link receives this NS message. It responds with an NA claiming that it is currently using that same address 2001:DB8:C0FF:EE::1 yet it does not actually use this address.

Step 3: Host A sends another NS message requesting to use another IPv6 address 2001:DB8:C0FF:EE::A. Host X again claims that this address is already taken. Host X essentially claims all addresses that Host A requests to use thereby preventing Host A from having a valid IPv6 address.

2.3 Neighbor Cache Attacks
When performing address resolution after receiving IPv6 an NA response to an NS request, a host stores the MAC address to IPv6 address binding in its neighbor table/cache. If many hosts reside on the local link, the neighbor table can grow large in size. In IPv6, the interface identifier is 64-bits long. There could be as many as 264 potential number of hosts on the link resulting in potentially 264 neighbor table entries. With IoT devices prevalent these possibilities become close to reality.

A malicious host (Host X) can attempt to fill up the neighbor cache / table of another host or router resulting in a DoS condition.

Step 1: Malicious Host X sends packets to all potential addresses in its local link. The local router R1 will attempt to resolve the IPv6 addresses in order to forward the frames to them. For hosts whose addresses are not yet resolved, R1 will create an incomplete cache entry for a few seconds as it awaits a response that is never received. This entry eventually times out.

However, if Host X sends many such packets fast, it could fill up the R1 neighbor table resulting in a DoS condition.

DHCPv6 Attacks
DHCPv6 assigns hosts IPv6 prefixes and other configuration options. DHCPv6 is both a stateful and stateless protocol. A rogue DHCPv6 server could be inserted into a network. The attackers can then deploy man-in-the-middle attacks ,traffic interception or blackhole traffic.

Mitigation of IPv6 First Hop Security Concerns
Appropriate protection mechanism should be employed where possible.

IPv6 RA Guard

DHCPv6 Guard

Source Guard

IPv6 RA Guard
RA guard enables blocking or rejection of rogue or unwanted router advertisements.

In host mode, all RA redirect messages are disallowed on the port. RA guard compares configuration information on Layer 2 device with information received in the RA frame. Once validated, the RA is forwarded to its unicast | multicast destination.

Configuration
In global configuration mode;

#configure terminal
#ipv6 nd raguard policy policy_name
#device-role <host | router>
#hop limit < maximum | minimum > number
#managed-config-flag < on | off >
#match ipv6 access-list alc
#match ra prefix-list ipv6_prefix_list
#other-config-flag < on | off >
#router-preference maximum < high | low | medium >
#trusted port 
To specify the role of the device attached to the port:

#device role < host | router >

(Optional) Enable verification of advertised hop count limit;
#hop-limit < maximum | minimum > number.

(Optional) Enable verification that the advertised managed address configuration flag is on. #managed-config-flag on

(Optional) Enable verification of the sender’s IPv6 address in inspected messages from the configured authorized device source access-list
#match ipv6 access-list acl

(Optional) Verification of the advertised prefixes in inspected messages from configured prefix-list.
#match ra-prefix-list list_name

(Optional) Verification of advertised other-config parameter;
#other-config-flag on

(Optional) Verification that the advertised default router preference parameter value is lower than or equal to a specified limit;
#router preference maximum < high | low | medium >

All optional features are bypassed if not configured.

Applying RA Guard
Apply IPv6 RAGuard feature to a specified interface using the following command;

#ipv6 nd raguard attach-policy policy_name < vlan <add|except|none|remove|all> vlan <vlan1, vlan2 … vlan n>>

Verification
#show ipv6 nd raguard policy policy_name

#debug ipv6 snooping raguard <filter | interface | vlanID >

For configured interfaces;

#show ipv6 snooping capture-policy interface interface_id

Restrictions for IPv6 RA guard
IPv6 RA guard does not offer protection when IPv6 traffic is tunneled.

RA guard is supported on hardware when the TCAM is programmed.

RA Guard can be configured on a switchport interface in the ingress direction.

Supports host and router mode.

Not supported in etherchannel and etherchannel port members.

Not supported on trunk ports with merge mode.

Is supported on auxiliary VLANs and private VLANs (PvLANs). Primary VLAN features are inherited and merged with port features.

Packets dropped by IPv6 RA guard can be spanned.

RA guard cannot be configured if the following command is configured
#platform ipv6 acl icmp optimize neighbor-discovery

DHCPV6 Guard
DHCPv6 Guard blocks reply and advertisements that come from unauthorized / rogue DHCPv6 servers and relay agents. Client messages or messages sent by replay agents from clients are not blocked.

DHCPv6 server messages are only processed if the device role is set to server.

Restrictions
DHCPv6Guard is not supported on etherchannel ports.

Configuration
Step 1: Define an IPv6 ACL;

#ipv6 access-list acl_name

#permit host ip_address any

Step 2: Create an entry in an IPv6 prefix-list;

#ipv6 prefix-list prefix_list_name permit ipv6_prefix 128

Step 3: Define the DHCPv6 Guard policy name;

#ipv6 dhcp guard policy policy_name

Step 4: Specify the device role of the device attached to the target (interface or VLAN);
#device-role < client | server >

Step 5: Enable verification of the advertised DHCP server and relay address in inspected messages from the configured authorized server ACL. An empty ACL is treated as a permit.
#match server access-list acl

Step 6: (Optional) Enable verification of advertised prefixes in DHCP reply messages from the configured authorized prefix-list. An empty ACL is treated as a permit.

Step 7: (Optional) Enable verification that the advertised preference (in preference option) is greater than the specified limit; #preference min limit

Step 8: (Optional) Enable verification that the advertised preference is less than the specified limit #preference max limit

Step 9: (Optional) Specify that this policy is being applied to trusted ports. All DHCPv6 guard policing will be disabled; #trusted-port

Step 10: put an interface into Layer 2 mode;

#interface gigabitethernet0/0

#switchport

Verification
#show ipv6 dhcp guard policy policy_name

IPv6 Snooping
IPv6 snooping bundles several IPv6 first-hop security features such as ND inspection, IPv6 device tracking, IPv6 address glean, IPv6 binding table recovery.

IPv6 ND inspection operates at Layer 2 or between Layer 2 and Layer 3.

IPv6 mitigates vulnerabilities in the ICMPv6 ND mechanisms for example attacks on DAD, address resolution, device discovery and neighbor cache/table.

IPv6 snooping learns and secures binding for SLAAC addresses in Layer 2 neighbor tables and analyses ND messages in order to build a trust binding table. An ND message is considered trustworthy if its IPv6-to-MAC mapping is verifiable. The IPv6 first-hop security binding table recovery mechanism enables the binding table to recover in the event of a device reboot.

The binding table is a database of IPv6 neighbors connected to the device and is created from sources such as ND snooping. It is used by various IPv6 guard features to validate link-layer addresses, IPv4 or IPv6 addresses prefix-binding of neighbors to prevent spoofing and redirect attacks.

Restriction
IPv6 snooping is not supported on etherchannels.

Configuration
To configure an IPv6 snooping policy;

#ipv6 snooping policy policy-name

#Attach the snooping policy to an interface

#interface interface_name_number

#ipv6 snooping attach-policy policy-name

Verification
Display snooping ND messages and capture policies

#show ipv6 snooping capture-policy interface interface_number

To display information about the packets counted by the interface counter;

#show ipv6 snooping counter interface interface_name_number

To display information about snooping features configured on a device;

#show ipv6 snooping features

To display information about configured policies and interfaces that they are attached to;

#show ipv6 snooping policies

Debugging of IPv6 snooping information;

#debug ipv6 snooping

IPv6 First Hop Security Binding Table
The binding table recovery mechanism feature enables the binding table to recover in the event of a device reboot. The binding table is a database of IPv6 neighbors connected to the device and is created from informational sources such as ND snooping, DHCP gleaning. It is used by various IPv6 guard features to prevent spoofing and redirect attacks.

The recovery mechanism will block any data traffic sourced from an unknown source (a source that is not in the binding table).

The binding table introduces the capacity to provide a prefix-list that is matched before the recovery is attempted for both DHCP and NDP.

If an address does not match the prefix-list associated with the protocol, the recovery of the binding table entry will not be attempted with that protocol.

