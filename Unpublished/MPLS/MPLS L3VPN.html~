 <h1>Configuring MPLS Layer 3 VPN on Cisco IOS</h1>
 
 <h1>Contents</h1>
 <p>
   <ol>
     <li><a href="#INTRODUCTION">Introduction</a></li>
     <li><a href="#COMPONENTS">L3VPN Components</a></li>
     <li><a href="#CONFIGURATION">Configuration</a></li>
     <li><a href="#TROUBLESHOOTING">Troubleshooting</a></li>
     
     
   </ol>
 </p>
 
<h1 id="INTRODUCTION">Introduction</h1>
<p>
MPLS Layer 3 VPNs (L3VPNs) are used by service providers (SPs) to provide layer 3   
connectivity between an enterprise and its different remote offices/locations 
through the service provider's network. MPLS L3VPNs are defined by RFC 4364. 

SPs are able to provide layer 3 connectivity to many different customers and their remote 
locations using the same underlaying infrastructure. This is possible regardless of 
whether the different customer sites use the same overlapping RFC 1918 IP 
addresses. 
Traffic from different customers is differentiated using VPNv4 addresses and routed 
to their respective destinations using the SP's core network.
</p>
<p>
The following topology will be used to configure MPLS Layer 3 VPNs.
<img alt="" src="Media/l3vpn_topology.png">

</p>
<p>
The routers R1 and R6 in the topology above are referred to as Provider Edge (PE) 
routers or edge Label Switch Routers (LSR). The MPLS network is usually referred 
to as the P network and the customer network, the C network. All LSRs in the P 
network have MPLS configured. PE routers have VRFs for each customer. Customer 
Edge (CE) routers have no knowledge of MPLS or VRFs. CE routers connect to Provider
Edge (PE) routers.
</p>
<p>
At the PE routers, VRFs are created for each customer as one PE router may 
connect to many CE routers. Each customer’s routes will be separated from other 
customers in their own routing table.
</p>

<h1 id="COMPONENTS">MPLS L3VPN Components</h1>
<p>
MPLS L3VPNs consist of prefix exchange between CE and PE and P routers in the 
service provider's core network.

 <h2>Service Provider Core</h2>
 <p>
In the service provider core of an MPLS L3VPN, the P routers run MPLS over an 
 interior gateway protocol(IGP) such as IS-IS, OSPF; the result is that packets are switched using 
 MPLS along routing paths created by the underlaying IGP. Intermediate LSRs in 
 the provider core network do not have the customer  prefixes in their routing tables.
 All P routers (intermediate and edge LSRs) run an IGP and are configured for MPLS. LDP 
 is usually configured as the label exchange protocol. Other labeling methods 
 are supported such as BGP, RSVP-TE, etc.
 </p>
 
 <h3>PE Routers</h3>
 <p>
 Only PE routers run BGP and they form an iBGP peering through the VPNv4 
   address family.
	On the PE, a VRF is created for each customer. This ensures that each 
 customer has their prefixes in a separate routing table. 
	In the VRF configuration, a route distinguisher (RD) is configured. This 
	is used by MP-BGP on the PE to differentiate the customer's prefixes 
 (including overlapping IP addresses) when switching customer traffic through 
 the provider core network.
	The PE interface connecting to each customer's CE is placed in its corresponding VRF.
	Additionally, the route-target (RT) is configured on the PE devices to 
	determine into which VRF routing table a prefix should be placed.
</p>

<h3>Route Distinguisher (RD)</h3>
<p>
The Route Distinguisher (RD) is a 64-bit (8-byte) value usually of the format ASN:nn or 
IP address:nn where ASN is the Autonomous system number and nn is any random 
number. RD is used by the PE to distinguish and uniquely identify the different 
VRFs; to differentiate the multiple prefixes from different customers.
This allows for overlapping IPv4 addresses between customers.
It is locally significant and does not need to match on the remote PE. This is 
very critical particularly when clients are using RFC 1918 prefixes. 
</p>

<h3>VPNv4</h3>
<p>
The RD is used to create <b>VPNv4 addresses</b>. This is a <b>96-bit</b> value that consists 
of the RD (64-bit) and the IP address/network address (32-bit). It is usually in 
the format RD:IP address. An example can be 65000:10000:10.10.20.0 where the 
value 65000:10000 is the RD and 10.10.20.0 is the prefix being shared. VPNv4 
addresses make addresses from the different customers unique. This results in the 
ability of the SP to route traffic for different customers regardless of whether 
the use overlapping address space or not.

VPNv4 NLRI main attributes include:
<ul>
  <li>8-byte route distinguisher(RD)</li>
  <li>IPv4 prefix and length</li>
  <li>Next hop</li>
  <li>MPLS VPN label</li>
</ul>
</p>


<h3>MPLS Layer 3 VPN Label Stack</h3>
<p>
L3VPN needs at least 2 labels to forward traffic across an MPLS L3VPN. 
The first label attached is the VPN label and the second is the transport/Label 
Distribution Protocol (LDP) label. 
On an MPLS packet, the transport label is the top most label. It is typically 
derived from LDP. It is sometimes referred to as the IGP label. 
The LDP label(transport label) is used for label switching from PE to PE through the MPLS domain 
as intermediate LSRs run only MPLS and not BGP. The transport label basically 
tells SP MPLS core LSRs which PE traffic is destined to (exit point) i.e., which 
PE device is the exit point out of the L3VPN to the CE. The VPN Label is derived from VPNv4 advertisements of PE and 
 is used by the PE router to determine which CE traffic is destined to.
 </p>
 <p>
The VPN label is used by the egress LSR/PE router to determine customer specifics 
about the packet and what to do with it. The VPN label tells the PE router which 
CE traffic is destined to. It is derived from VPNv4 advertisements of PEs.
Other applications such as MPLS TE, FRR, etc., require even more labels.
VPN labels are exchange between PE routers over the MP-BGP peering. Labeled 
packets are advertised along with BGP extended communities path attributes.
MPLS generates labels for VPNv4 routes and adds [V] after the prefix to indicate 
that the label is a VPNv4 label.
In the L3VPN label stack, the VPN label is usually at the bottom of the stack 
(nearest to the Layer 3 header) as indicated by the 1-value is the S-section of 
the MPLS header.
</p>


<h3>Route Target (RT)</h3>
<p>
A route-target (RT) is a 64-bit value similar in format to the RD i.e. ASN:nn or 
IP addess:nn. It is used by MP-BGP to determine the VRF into which the different 
customer prefixes should be installed. RT is defined by RFC 4360 (BGP extended communities attribute).

The routes defined in the VRF of one customer are tagged for export 
to the remote PE customer VRF using the command 
<code style="font-size:120%;"><b>route-target export ASN:nn</b></code>. To 
import these routes into the appropriate VRF at the remote PE router, the command 
<code style="font-size:120%;"><b>route-target import ASN:nn</b></code> is used.
The new BGP extended community attribute "route-target" is used to control what 
prefixes enter and exit the VRF table.
<ul>
  <li><b>export route target:</b> what routes will go from VRF into BGP.</li>
  <li><b>import route target:</b> what routes will go from BGP into VRF.</li>
</ul>
The RT allows for granular control over what sites have what routes. 
</p>
<p>
As an alternative to the use of RD, the route-maps "import map" and "export map" 
allow control over import and export on a per prefix basis.
</p>

<p>
RT controls the route’s VPN VRF membership(s). It is possible to have multiple 
RTs per VPNv4 route but one RD per VPNv4 route. VPNv4 speakers only accept VPNv4 
routes with an RT matching a local VRF. Some exceptions include route reflectors. 
VPNv4 routes can have more than one RT. This allows for complex VPN topologies 
such as full mesh, hub and spoke, central services.
The RT value used for export in the VRF on the ingress PE router should be the 
same RT value used in the RT-import of the appropriate VRF on the remote egress PE.
</p>
  
  <h2>PE-CE</h2> 
<p>
The CE forms an IGP peer relationship with the PE through this peering, it 
exchanges its prefixes with the PE. The PE isolates these prefixes received from 
the CE into the VRF created for this customer. For ingress traffic, the PE 
redistributes these customer prefixes from the IGP VRF table into MP-BGP VRF for 
that customer. This configuration is implemented using the corresponding BGP VRF address-family.
    For egress traffic, the prefixes are redistributed from BGP into the IGP.
    </p>
<p>If the PE and CE routers have an eBGP peering, the prefixes are exchanged using 
BGP and no IGP (and redistribution) is required. MPLS is not configured on 
any client facing interfaces. Network traffic at the CE-PE interface uses normal 
IPv4 or IPv6 routing and all IPv4 protocols supported. Some IPv6 protocols 
supported.
   </p>
  
<h1 id="CONFIGURATION">Configuration</h1>
<p>
To create L3VPNs, the following steps should be taken.
<ul>
<li>Step 1: Ensure MPLS infrastructure is in place. i.e. IP routing, MPLS.</li>
<li>Step 2: Create the VRFs and associate interfaces with the created VRFs on PE or edge LSRs</li>
<li>Step 3: Configure MP-BGP peerings between the PE routers using VPNv4 address-family.</li>
<li>Step 4: Route Exchange Between the PE and CE devices.</li>
<li>Step 5: Redistribute routes between MP-BGP VRF address-family and PE-CE 
routing protocol (this is not needed if PE-CE routing uses eBGP).</li>
<li>Step 6: Test connectivity.</li>
</ul>
</p>

<h2>Step 1: Ensure MPLS Infrastructure is in Place</h2>
<p>
When configuring MP-BGP on an LSR, ensure that BGP peer address and the MPLS 
router ID match for ease of configuration.
 
Guidance on how to configure an operational MPLS infrastructure can be found 
<a href="https://emmanueltoko.blogspot.com/2021/02/configuring-mpls-in-cisco-ios.html">here</a>.
</p>

<h2>Step 2: Create VRFs on PE Routers</h2>
<p>
Virtual Routing and Forwarding (VRFs) are used to create separate routing tables 
for each customer on a router. These routing tables are separated from the global routing table (RIB).
There are two ways to create a VRF; 
<ol>
  <li><code style="font-size:120%;"><b>ip vrf &lt;vrf-name&gt;</b></code> (older method).

  <p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1(config)#<b>ip vrf CUST_X_HQ</b>                       <br>
R1(config-vrf)#<b>rd 300:100                  </b> <br>
R1(config-vrf)#<b>route-target export 300:100 </b> <br>
R1(config-vrf)#<b>route-target import 300:110 </b> <br>
R1(config-vrf)#<b>ip vrf CUST_Z_2                  </b> <br>
R1(config-vrf)#<b>rd 200:2                  </b> <br>
R1(config-vrf)#<b>route-target export 200:110 </b> <br>
R1(config-vrf)#<b>route-target import 200:100 </b> <br>
</code></div>
</p>

  <p>
Two VRFs CUST_X_HQ and CUST_Z_2 have been created. However, configuring VRFs with the 
<code style="font-size:130%"><b>ip vrf CUST_X_HQ</b></code> command results in VRFs defined only for IPv4 
as the command supports IPv4 only. 
If IPv6 is required, the VRFs should be created using the command 
<code style="font-size:130%"><b>vrf definition CUST_X_HQ</b></code>.
</p>
  
  </li> 
  <li> <code style="font-size:120%;"><b>vrf definition vrf_name</b></code>.
  <p>
  <div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R6(config)#<b>vrf definition CUST_Z_HQ           </b> <br>
R6(config-vrf)#<b>rd 200:1                      </b> <br>
R6(config-vrf)#<b>address-family ipv4                </b> <br>
R6(config-vrf-af)#<b>route-target export 200:100  </b> <br>
R6(config-vrf-af)#<b>route-target import 200:110  </b> <br>
</code></div>
</p>
<p>
The VRF created is CUST_Z_HQ. VRF names do not need to match as they are locally 
significant.
</p>
  </li>
  </ol>
</p>



<h3><code style="font-size:120%;">vrf upgrade-cli</code></h3>
<p>
The global configuration command <code style="font-size:120%;"><b>vrf upgrade-cli</b></code> 
is an important command to 
use particularly when introducing VRFs in IPv6 in a network where IPv4 VRFs are 
operational. It has been previously mentioned that the <code style="font-size:120%;"><b>
vrf definition &lt;vrf-name&gt;</b></code> command supports creation IPv6 VRFs. 
If the VRFs were created like in following configuration;
</p>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1(config)#<b>ip vrf CUST_X_HQ</b>                       <br>
R1(config-vrf)#<b>rd 300:100                  </b> <br>
R1(config-vrf)#<b>route-target export 300:100 </b> <br>
R1(config-vrf)#<b>route-target import 300:110 </b> <br>
R1(config-vrf)#<b>ip vrf CUST_Z_2                  </b> <br>
R1(config-vrf)#<b>rd 200:2                  </b> <br>
R1(config-vrf)#<b>route-target export 200:110 </b> <br>
R1(config-vrf)#<b>route-target import 200:100 </b> <br>
</code></div>
</code></div>
</p>
<p>
The command <code style="font-size:120%;"><b>vrf upgrade-cli multi-af-mode common-policies</b></code> 
will apply the same RT values configured for address-family IPv4 to IPv6 
configuration automatically. This can help make applying the same configuration 
of IPv4 VRFs to IPv6 much easier.

When configuring RT or other settings in new format VRF, the address family 
configuration takes precedence over any other similar settings that may have been
configured under the VRF sub-mode.
</p>

<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
<code style="font-size:130%">
R1(config)#<b>vrf upgrade-cli multi-af-mode common-policies</b>                <br>
You are about to upgrade to the multi-AF VRF syntax commands.                  <br>
You will lose any IPv6 address configured on interfaces                        <br>
belonging to upgraded VRFs.                                                    <br>
                                                                               <br>
Are you sure ? [yes]: <b>yes</b>                                               <br>
Number of VRFs upgraded: 2                                                     <br>
R1(config)#                                                                    <br>
R1(config)#                                                                    <br>
R1(config)#<b>do show vrf detail</b>                                                  <br>
VRF CUST_X_HQ (VRF Id = 1); default RD 300:100; default VPNID &lt;not set&gt;  <br>
&nbsp;&nbsp;No interfaces                                                                <br>
Address family ipv4 (Table ID = 1 (0x1)):                                      <br>
&nbsp;&nbsp;Export VPN route-target communities                                          <br>
&nbsp;&nbsp;&nbsp;&nbsp;RT:300:100                                                                 <br>
&nbsp;&nbsp;Import VPN route-target communities                                          <br>
&nbsp;&nbsp;&nbsp;&nbsp;RT:300:110                                                                 <br>
&nbsp;&nbsp;No import route-map                                                          <br>
&nbsp;&nbsp;No export route-map                                                          <br>
&nbsp;&nbsp;VRF label distribution protocol: not configured                              <br>
&nbsp;&nbsp;VRF label allocation mode: per-prefix                                        <br>
Address family ipv6 not active                                                 <br>
&nbsp;&nbsp;&nbsp;&nbsp;                                                                           <br>
VRF CUST_Z_2 (VRF Id = 2); default RD 200:2; default VPNID &lt;not set&gt;     <br>
&nbsp;&nbsp;Interfaces:                                                                  <br>
&nbsp;&nbsp;&nbsp;&nbsp;Gi2/0                                                                      <br>
Address family ipv4 (Table ID = 2 (0x2)):                                      <br>
&nbsp;&nbsp;Export VPN route-target communities                                          <br>
&nbsp;&nbsp;&nbsp;&nbsp;RT:200:110                                                                 <br>
&nbsp;&nbsp;Import VPN route-target communities                                          <br>
&nbsp;&nbsp;&nbsp;&nbsp;RT:200:100                                                                 <br>
&nbsp;&nbsp;No import route-map                                                          <br>
&nbsp;&nbsp;No export route-map                                                          <br>
&nbsp;&nbsp;VRF label distribution protocol: not configured                              <br>
&nbsp;&nbsp;VRF label allocation mode: per-prefix                                        <br>
Address family ipv6 not active                                                 <br>
                                                                               <br>
R1(config)#                                                                    <br>

</code></div>

<h3 id="VERIFICATION">Verification</h3>
<p>
To verify the creation of VRFs, use the command <code style="font-size:120%;"><b>show vrf</b></code> 
as shown above.

<h2>Step 3: Configure MP-BGP Peerings between the PE routers using VPNv4 address-family</h2>
<p>
Configure an iBGP peering between the PE routers. This iBGP peering should be 
formed using the VPNv4 address family. iBGP neighborships occur over a maximum 
of 255 hops. To configure an iBGP neigborship on R1;
</p>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1(config)#<b>router bgp 100                                 </b>  <br>
R1(config-router)#<b>bgp log-neighbor-changes                  </b>  <br>
R1(config-router)#<b>no bgp default ipv4-unicast               </b>  <br>
R1(config-router)#<b>neighbor 30.255.6.6 remote-as 100          </b>  <br>
R1(config-router)#<b>neighbor 30.255.6.6 update-source Loopback255 </b>  <br>
R1(config-router)#<b>address-family vpnv4 unicast                      </b>  <br>
R1(config-router-af)#<b>neighbor 30.255.6.6 activate              </b>  <br>
R1(config-router-af)#<b>exit-address-family                    </b>  <br>
                                                              <br>
!On R6                                                         <br>
                                                              <br>
R6(config)#<b>router bgp 100                                 </b>  <br>
R6(config-router)#<b>bgp log-neighbor-changes                  </b>  <br>
R6(config-router)#<b>no bgp default ipv4-unicast               </b>  <br>
R6(config-router)#<b>neighbor 30.255.1.1 remote-as 100          </b>  <br>
R6(config-router)#<b>neighbor 30.255.1.1 update-source Loopback255 </b>  <br>
R6(config-router)#<b>address-family vpnv4                      </b>  <br>
R6(config-router-af)#<b>neighbor 30.255.1.1 activate              </b>  <br>
R6(config-router-af)#<b>exit-address-family                    </b>  <br>
</code>
</div>
<p>
The command <code style="font-size:120%;"><b>neighbor 30.255.1.1 send-community extended</b></code> is 
automatically added by MP-BGP as it uses extended communities to route VPNv4 
traffic. This can be verified by the command <code style="font-size:120%;"><b>show run | section bgp</b></code>.
</p>

<h3>Verification</h3>
<p>
Once the iBGP peering has been completed, this neighborship can be confirmed 
using the command <code style="font-size:120%;"><b>show bgp vpnv4 unicast all summary</b></code>. The 
result of this command is indicated in the following snippet.
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1#<b>show bgp vpnv4 unicast all summary</b>                                                  <br>
BGP router identifier 30.255.1.1, local AS number 100                                  <br>
BGP table version is 56, main routing table version 56                                 <br>
39 network entries using 6552 bytes of memory                                          <br>
39 path entries using 2496 bytes of memory                                             <br>
6/6 BGP path/bestpath attribute entries using 864 bytes of memory                      <br>
5 BGP extended community entries using 1040 bytes of memory                            <br>
0 BGP route-map cache entries using 0 bytes of memory                                  <br>
0 BGP filter-list cache entries using 0 bytes of memory                                <br>
BGP using 10952 total bytes of memory                                                  <br>
BGP activity 47/8 prefixes, 47/8 paths, scan interval 60 secs                          <br>
                                                                                       <br>
Neighbor&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;V&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; AS MsgRcvd MsgSent&nbsp;&nbsp; TblVer&nbsp;&nbsp;InQ OutQ Up/Down&nbsp;&nbsp;State/PfxRcd<br>
30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;87&nbsp;&nbsp;&nbsp;&nbsp; 105&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 56&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0 01:28:23&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;5    <br>
30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;67&nbsp;&nbsp;&nbsp;&nbsp; 103&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 56&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;0 01:28:04&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 12    <br>
</code>
</div>
<p>
This shows that the iBGP peering was created. A second iBGP peer(R5) was configured.
</p>

<p>
To confirm if extended BGP communities are being sent: 
<code><b>debug bgp vpnv4 unicast updates</b></code> 
</p>

<h2>Step 4: Route Exchange Between the PE And CE Devices</h2>
<p>
This can be implemented through configuration of an IGP between the PE-CE routers 
or BGP with an eBGP relationship.
A routing protocol needs to be configured between the PE and CE routers. Usually 
this is an Interior Gateway Protocol (IGP) such as EIGRP, IS-IS or OSPF. Some 
customers may prefer running BGP. This routing protocol is to share the customer
routes from the CE to the PE.
</p>
<p>
When configuring the routing protocol, the physical interface that the PE connects
to the CE should be placed in the appropriate VRF that was configured for the 
customer to which that interface points. Between CE R1 and PE R2, the configured 
routing protocol is EIGRP with named EIGRP being configured on R2.
</p>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1(config)#<b>interface g3/0                                                                         </b><br>
R1(config-if)#<b>vrf forwarding CUST_Z_2</b><br> 
% Interface GigabitEthernet3/0 IPv4 disabled and address(es) removed due to enabling VRF CUST_Z_2      </b><br>
R1(config-if)#<b>ip address 10.255.19.1 255.255.255.252</b><br>
R1(config)#<b>router eigrp EIGRP_NAMED</b><br>
R1(config-router)#<b>address-family ipv4 unicast vrf CUST_Z_2 autonomous-system 10 </b><br>
R1(config-router-af)#<b>network 10.255.19.0 0.0.0.3  </b><br>
R1(config-router-af)#<b>topology base </b><br>
R1(config-router-af)#<b>redistribute bgp 100 metric 100000 100 200 1 1500 </b><br>
</code></div>
</p>
<p>
On R9:
</p>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R9(config-if)#<b>router eigrp EIGRP_CUSTOMERS                                                        </b><br>
R9(config-router)#<b>address-family ipv4 unicast autonomous-system 10                             </b><br>
R9(config-router-af)#<b>network 10.255.19.0 0.0.0.3                                                   </b><br>
R9(config-router-af)#<b>network 10.90.0.0 0.0.255.255                                                   </b><br>
</code>
</div>
</p>
<p>
Note that VRFs are only configured on the PE routers. On CE routers, VRFs are 
not required for MPLS L3VPN functionality. If they are configured, then it could 
be for another purpose unrelated to MPLS L3VPN.
</p>
<p>
The IGPs on the running on the PE-CE interfaces of the different PE-CE pairings 
does not have to be the same. To illustrate this, the PE-CE IGP on R7 is OSPF.
</p>



<h2>Step 5: Redistribute Routes Between MP-BGP VRF Address-family and PE-CE Routing Protocol</h2>
<p>
Route redistribution between the IGP and MP-BGP occurs at the PE router. Customer 
routes learned from the remote PE router are stored in the MP-BGP VPNv4 table. 
These can then be redistributed into the IGP running on the PE-CE link. Also, 
routes learned from the connected customer site through the IGP can be 
redistributed into MP-BGP to be forwarded to the remote customer site. This is 
accomplished using the redistribution command in the appropriate address-family.
</p>
<p>
On R2:
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1(config)#<b>router bgp 100                                                </b>    <br>
R1(config-router)#<b>no bgp default ipv4-unicast                              </b>    <br>
!REDISTRIBUTE CUST_X_HQ ROUTES INTO MP-BGP (LOCAL CUSTOMER SITE TO REMOTE SITES)  <br>
R1(config-router)#<b>address-family ipv4 vrf CUST_X_HQ                           </b>    <br>
R1(config-router-af)#<b>redistribute eigrp 10                                 </b>    <br>
R1(config-router-af)#<b>exit-address-family                                   </b>    <br>
R1(config-router)#<b>exit                                                     </b>    <br>
!REDISTRIBUTE MP-BGP ROUTES INTO EIGRP (REMOTE CUSTOMER SITES TO LOCAL SITE)   <br>
R1(config)#<b>router eigrp EIGRP_CUSTOMERS                                    </b>    <br>
R1(config-router)#<b>address-family ipv4 vrf CUST_X_HQ autonomous-system 10      </b>    <br>
R1(config-router-af)#<b>topology base                                         </b>    <br>
R1(config-router-af-topology)#<b>redistribute bgp 100 100000 100 250 10 1500</b>
</code></div>
</p>
<p>
On R5
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R5(config)#<b>router bgp 100                                </b> <br>
R5(config-router)#<b>address-family ipv4 vrf CUST_X_2    </b> <br>
R5(config-router-af)#<b>redistribute eigrp 10                </b> <br>
R5(config-router-af)#<b>exit-address-family                   </b> <br>
R5(config-router)#<b>exit                                     </b> <br>
R5(config)#<b>router eigrp EIGRP_CUSTOMERS</b> <br>
R1(config-router)#<b>address-family ipv4 vrf CUST_X_2 autonomous-system 10      </b>    <br>
R1(config-router-af)#<b>topology base                                         </b>    <br>
R1(config-router-af-topology)#<b>redistribute bgp 100 100000 100 250 10 1500</b><br>
R5(config-router-af)#<b>exit-address-family                   </b>
</code></div>
<p>
Note that with eBGP, no redistribution of PE-CE routes is required. These routes 
will simply be shared through the eBGP relationship from MP-BGP.
</p>

<h3>Verification</h3>
<p>
To verify that the appropriate routes have been redistributed;
</p>
<p>
On the PE router;
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1#<b>show ip route vrf CUST_Z_2</b>                                           <br>       
                                                                               <br>
Routing Table: CUST_Z_2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
Codes: L - local, C - connected, S - static, R - RIP, M - mobile, B - BGP&nbsp;&nbsp;    <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; D - EIGRP, EX - EIGRP external, O - OSPF, IA - OSPF inter area&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; N1 - OSPF NSSA external type 1, N2 - OSPF NSSA external type 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; E1 - OSPF external type 1, E2 - OSPF external type 2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; i - IS-IS, su - IS-IS summary, L1 - IS-IS level-1, L2 - IS-IS level-2   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; ia - IS-IS inter area, * - candidate default, U - per-user static route <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; o - ODR, P - periodic downloaded static route, H - NHRP, l - LISP&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; + - replicated route, % - next hop override&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
Gateway of last resort is not set&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.0.0.0/8 is variably subnetted, 18 subnets, 3 masks&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.9.1.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [90/2570240] via 10.255.19.2, 01:04:15, GigabitEthernet3/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.9.2.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [90/2570240] via 10.255.19.2, 01:04:15, GigabitEthernet3/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.9.3.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [90/2570240] via 10.255.19.2, 01:04:15, GigabitEthernet3/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
D&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.9.4.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; [90/2570240] via 10.255.19.2, 01:04:15, GigabitEthernet3/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.1.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.2.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.3.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.4.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.5.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.6.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.7.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.8.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.9.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.10.0/24 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.255.1/32 [200/2] via 30.255.6.6, 00:30:17&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
C&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.19.0/30 is directly connected, GigabitEthernet3/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
L&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.19.1/32 is directly connected, GigabitEthernet3/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;    <br>
B&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.67.0/30 [200/0] via 30.255.6.6, 00:39:18&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;   <br>
</code></div>
</p>
<p>
On the CE router;
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R1#<b>show ip route</b>                                                       <br>

</code></div>
</p>
<p>
show bgp vpnv4 unicast all.
</p>

<p>
Routes should customer local and remote customer site routes should start appearing 
in the MP-BGP VPNv4 table at this point. This can be verified by the command; 
<code style="font-size:120%;"><b>show bgp vpnv4 unicast all</b></code>. This shows the routes in the 
MP-BGP table for all VRFs. To view the routes for a specific VRF in the MP-BGP 
table, issue the following command; show bgp vpnv4 unicast vrf CUST_X_HQ.
</p>

<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">

R1#<b>show bgp vpnv4 unicast all</b>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>   
BGP table version is 40, local router ID is 30.255.1.1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
Status codes: s suppressed, d damped, h history, * valid, &gt; best, i - internal, <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;r RIB-failure, S Stale, m multipath, b backup-path, f RT-Filter,     <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x best-external, a additional-path, c RIB-compressed,                <br>
Origin codes: i - IGP, e - EGP, ? - incomplete&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
RPKI validation codes: V valid, I invalid, N Not found&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
&nbsp;&nbsp;&nbsp;&nbsp; Network&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next Hop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Metric LocPrf Weight Path                <br>
Route Distinguisher: 200:1&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
 *>i 10.10.1.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.2.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.3.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.4.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.5.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.6.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.7.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.8.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.9.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.10.0/24&nbsp;&nbsp;&nbsp;&nbsp;30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.255.1/32&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.255.67.0/30&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
Route Distinguisher: 200:2 (default for vrf CUST_Z_2)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                <br>
&nbsp;&nbsp;&nbsp;&nbsp; Network&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next Hop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Metric LocPrf Weight Path                <br>
 *>&nbsp;&nbsp;10.9.1.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.19.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2570240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32768 ?&nbsp;&nbsp;                 <br>
 *>&nbsp;&nbsp;10.9.2.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.19.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2570240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32768 ?&nbsp;&nbsp;                 <br>
 *>&nbsp;&nbsp;10.9.3.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.19.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2570240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32768 ?&nbsp;&nbsp;                 <br>
 *>&nbsp;&nbsp;10.9.4.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.255.19.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;2570240&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32768 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.1.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.2.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.3.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.4.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.5.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.6.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.7.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.8.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.9.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.10.0/24&nbsp;&nbsp;&nbsp;&nbsp;30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.10.255.1/32&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>&nbsp;&nbsp;10.255.19.0/30&nbsp;&nbsp; 0.0.0.0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 32768 ?&nbsp;&nbsp;                 <br>
 *>i 10.255.67.0/30&nbsp;&nbsp; 30.255.6.6&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
Route Distinguisher: 300:100 (default for vrf CUST_X_HQ)&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
 *>i 10.80.1.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.80.2.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.80.3.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.80.4.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
&nbsp;&nbsp;&nbsp;&nbsp; Network&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Next Hop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Metric LocPrf Weight Path                <br>
 *>i 10.255.58.0/30&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
Route Distinguisher: 300:110&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                 <br>
 *>i 10.80.1.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.80.2.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.80.3.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.80.4.0/24&nbsp;&nbsp;&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10880&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
 *>i 10.255.58.0/30&nbsp;&nbsp; 30.255.5.5&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;100&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0 ?&nbsp;&nbsp;                 <br>
R1#                                                                                  	
</code></div>
<p>
Note that the routes learned through MP-BGP VPNv4, have the next-hop as the iBGP remote PE peer.
</p>

<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
<code style="font-size:130%">
R1#<b>show bgp vpnv4 unicast all 10.80.1.0</b>                                <br>
BGP routing table entry for 300:100:10.80.1.0/24, version 15                  <br>
Paths: (1 available, best #1, table CUST_X_HQ)                                <br>
&nbsp;&nbsp;Not advertised to any peer                                                  <br>
&nbsp;&nbsp;Refresh Epoch 1                                                             <br>
&nbsp;&nbsp;Local, imported path from 300:110:10.80.1.0/24                              <br>
&nbsp;&nbsp;&nbsp;&nbsp;30.255.5.5 (metric 3) from 30.255.5.5 (30.255.5.5)                        <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Origin incomplete, metric 10880, localpref 100, valid, internal, best   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extended Community: RT:300:110 Cost:pre-bestpath:128:10880              <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0x8800:32768:0 0x8801:10:256 0x8802:65281:2560 0x8803:65281:1500      <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0x8806:0:1493108744                                                   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mpls labels in/out nolabel/5018                                         <br>
BGP routing table entry for 300:110:10.80.1.0/24, version 11                  <br>
Paths: (1 available, best #1, no table)                                       <br>
&nbsp;&nbsp;Not advertised to any peer                                                  <br>
&nbsp;&nbsp;Refresh Epoch 1                                                             <br>
&nbsp;&nbsp;Local&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                                 <br>
&nbsp;&nbsp;&nbsp;&nbsp;30.255.5.5 (metric 3) from 30.255.5.5 (30.255.5.5)                        <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Origin incomplete, metric 10880, localpref 100, valid, internal, best   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Extended Community: RT:300:110 Cost:pre-bestpath:128:10880              <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0x8800:32768:0 0x8801:10:256 0x8802:65281:2560 0x8803:65281:1500      <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;0x8806:0:1493108744                                                   <br>
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;mpls labels in/out nolabel/5018                                         <br>
R1#&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
</code></div>
</p>
<p>
From this output, the details of EIGRP composite metrics are encoded in the BGP extended
community.
</p>
<h3>EIGRP</h3>
<p>
When redistributing prefixes into EIGRP, ensure that the seed metric is configured.
</p>
<p>
Verification: <code><b>show ip eigrp vrf &lt;vrf-name&gt; topology</b></code>. 
Some prefixes will have VPNv4 as the route source.
</p>

<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
<code style="font-size:130%">               
R1><b>show ip eigrp vrf CUST_Z_2 topology</b>                               <br>        
EIGRP-IPv4 VR(EIGRP_PE) Topology Table for AS(10)/ID(10.255.19.1)    <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Topology(base) TID(0) VRF(CUST_Z_2)                       <br>        
Codes: P - Passive, A - Active, U - Update, Q - Query, R - Reply,    <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; r - reply Status, s - sia Status                              <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                   <br>        
P 10.10.8.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.9.1.0/24, 1 successors, FD is 328990720                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via 10.255.19.2 (328990720/327761920), GigabitEthernet3/0    <br>        
P 10.10.5.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.9.2.0/24, 1 successors, FD is 328990720                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via 10.255.19.2 (328990720/327761920), GigabitEthernet3/0    <br>        
P 10.255.19.0/30, 1 successors, FD is 1310720                        <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Connected, GigabitEthernet3/0                            <br>        
P 10.9.3.0/24, 1 successors, FD is 328990720                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via 10.255.19.2 (328990720/327761920), GigabitEthernet3/0    <br>        
P 10.255.67.0/30, 1 successors, FD is 72089600                       <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.9.4.0/24, 1 successors, FD is 328990720                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via 10.255.19.2 (328990720/327761920), GigabitEthernet3/0    <br>        
P 10.10.4.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.9.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.6.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.7.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.255.1/32, 1 successors, FD is 72089600                       <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.2.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.10.0/24, 1 successors, FD is 72089600                        <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.1.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
P 10.10.3.0/24, 1 successors, FD is 72089600                         <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;via Redistributed (72089600/0)                               <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                   <br>        
R1>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                                                  <br>         
R1><b>show ip eigrp vrf CUST_Z_2 topology 10.10.1.0/24</b>                  <br>        
EIGRP-IPv4 VR(EIGRP_PE) Topology Entry for AS(10)/ID(10.255.19.1)    <br>        
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Topology(base) TID(0) VRF(CUST_Z_2)                       <br>        
EIGRP-IPv4(10): Topology base(0) entry for 10.10.1.0/24              <br>        
&nbsp;&nbsp;State is Passive, Query origin flag is 1, 1 Successor(s), FD is 72089600 <br>  
&nbsp;&nbsp;Descriptor Blocks:                                                       <br>  
&nbsp;&nbsp;30.255.6.6, from Redistributed, Send flag is 0x0                         <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Composite metric is (72089600/0), route is External                  <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Vector metric:                                                       <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Minimum bandwidth is 100000 Kbit                                   <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Total delay is 1000000000 picoseconds                              <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Reliability is 200/255                                             <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Load is 1/255                                                      <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Minimum MTU is 1500                                                <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Hop count is 0                                                     <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Originating router is 10.255.19.1                                  <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;External data:                                                       <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;AS number of route is 100                                          <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;External protocol is BGP, external metric is 2                     <br>  
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Administrator tag is 0 (0x00000000)                                <br>  
R1>                                                                          
</code></div>

<h3>OSPF</h3>
<p>
Enabling OSPF on an interface that is already part of a VRF makes the OSPF 
process VRF-aware. 
The OSPF behaviour when redistributing BGP routes into OSPF is for the routes to
be external routes E1 or E2. However, with VPNv4, these routes are treated as 
internal(inter-area if the OSPF on the CE devices are configured to be in 
different areas). OSPF and BGP VPNv4 behave differently from normal redistribution.
These routes are considered internal routes for the purpose of loop prevention 
and traffic engineering. Note that when redistributing prefixes into OSPF, excluding 
the <code><b>subnets</b></code> keyword results in classful prefixes being 
advertised. 

The output of <code><b>show ip ospf &lt;process-ID&gt;</b></code> on the PE 
router displays the output "Domain ID type.. value ..." The value is inherited 
from the OSPF process ID. 

The logic is that if the domain ID matches between the two sides, any prefixes 
that were originally an intra-area route is encoded as inter-area route when 
redistributed from BGP to OSPF e.g., OSPF with process ID 100 on both ends of 
the link, since the OSPF process ID is matching, then the routes can be encoded 
as inter-area routes. 

The domain-ID value can be changed in OSPF using the OSPF 
command <code><b>domain-id &lt;ip-address&gt;</b></code> the domain-ID is in the form of 
an IPv4 address. Changing the OSPF domain ID on one end of the PE results in the 
OSPF route type being encoded as external routes(Type 2) as opposed to internal routes.

The domain-ID is encoded(in HEX) in the BGP path attributes as an extended community 
value.

The domain-ID value takes precedence over the OSPF process ID value; i.e., if the 
process IDs are different but the domain-IDs are the same, then the routes will 
be advertised as inter-area routes.
</p>
<p>
<code><b>show ip cef</b></code> displays both the transport label and VPN label.
</p>

<p>
On the PE router of the provider, In the OSPF output of the command <code><b>
show ip ospf &lt;process-ID&gt;</b></code>, the message, Connected to the MPLS 
VPN superbackbone. The superbackbone is a hierarchy above area 0. With a superbackbone 
topology, permitted hierarchies include:
<ul>
  <li>Super-backbone (MPLS)&rarr; Area 0 &rarr; R1 &rarr; Area 1</li>
  <li>Super-backbone (MPLS)&rarr; Area 1 &rarr; R1 &rarr; Area 1</li>
  Not permitted is: 
  <li>Super-backbone (MPLS)&rarr; Area 1&rarr; R1 &rarr; Area 0. 
  Here, a virtual link would be required to be configured to connect the Area 0 to 
the superbackbone as it would be considered a discontiguous area.
  </li> 
</ul>
</p>

<h4>Traffic Enginneering: Primary and Backup Paths</h4>
<p>
Load-balancing across multiple paths can be accomplished by modifying the OSPF
 process ID or OSPF domain number. This results in some paths becoming external 
 routes. OSPF always chooses internal routes over external routes.
</p>

<h4>OSPF Sham-links</h4>
<p>
OSPF sham-links are similar to virtual links going over the SP network. It does 
not have to be in area 0.
</p>
<p>
Steps:
<ol>
  <li><b>Advertise a new prefix (/32) of a loopback into the VRF and advertise this into BGP:</b>
  Remember, the netmask must be /32 for this feature to work. This is done on 
  both PE devices.
  </li>
  <li>Verify IP connectivity between the two /32 prefixes.</li>
  <li>Under the OSPF process, configure the sham-link
  <code><b>area 1 sham-link 8.8.8.8 3.3.3.3</b></code>. where 8.8.8.8 is the 
  source(/32 of local device)and 3.3.3.3 is remote OSPF device. Do the same 
  but in the reverse direction on the remote device.
  
  </li>
  <li>Verify with the command <code><b>show ip ospf 100 neighbor</b></code>. It 
  shows neighborship over the sham-link.
  routes that were previously learned thru BGP are now learned thru OSPF (because 
  of lower AD); verify this on PE router using command: <code><b>show ip route</b></code>.
</ol>
</p>
<p>
Practical use case is that if you had a point2point VPN and you are migrating to 
MPLS L3VPN from legacy frame relay service, the backdoor link will be preferred 
from an OSPF point of view because intra-area is preferred to inter-area preferred 
to external routes.
</p>
<p>
Traffic engineering can be implemented based on the cost. 
</p>
<h4>Load-balancing</h4>
<p>
If a SP network employs the use of BGP route reflector, and the will only 
advertise what it considers as the best path of the available paths and not 
use the available paths simultaneously. For RR groups these updates based on the 
RD and performs path selection between the two of them.

To enable the RR to use both paths, we need to configure different RDs so that the 
RR can advertise both paths to the remote PE. The RR will receive these as two 
separate and independent best paths and they can be advertised to the remote neighbor.

The command <code><b>maximum-paths &lt;value&gt;</b></code> needs to be configured 
to enable multipaths.
</p>

<h3>BGP as PE-CE</h3>
<p>
If prefixes are to be shared using BGP as the protocol between at the PE-CE interconnection, 
on the PE device, the peering should be implemented in the VRF address-family.

At the CE devices, the ASN for BGP should be the same. However, because BGP will 
detect the same ASN, it will reject the advertised route to prevent loop formation.
There are two fixes for this:
<ul>
<li>On the CE, configure the neighbor with the command <code><b>allow-as-in</b></code></li>
<li>Alternatively, on the PE, <code><b>as-override</b></code> to the CE iBGP peer on both 
ends of the LSP.</li>
</ul>
</p>
<p>
Loops can be introduced by the above configuration options. One solution is the 
<b>BGP site-of-origin</b>.
Under BGP SOO, prefixes from one site are tagged with SOO code (say 1000:1) as they move to the PE.
This gets advertised as a BGP extended community. The PE devices will filter out 
any other prefixes that have that SOO code set. This is configured on the PE device 
for the CE eBGP peer. This is configured under the VRF address-family.
<code><b>neighbor 155.1.67.7 soo 1000:1</b></code>.

SOO can be verified with command <code><b>show bgp vpnv4 unicast all &lt;prefix&gt;</b></code>.

Lookout for SoO.
</p>
<h4>Verification</h4>
<p>
On the RR to confirm sharing of prefixes with PE: 
<code><b>show bgp vpnv4 unicast all neighbors &lt;neighbor-ip-address&gt; advertised-routes</b></code>.
</p>

<h2>Step 6: Test Connectivity</h2>
<p>
A ping test or traceroute test can be used to confirm the operation of the MPLS L3VPN.
</p>
<p>
<h3><code style="font-size:120%;">traceroute</code></h3>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R8#<b>traceroute 172.30.1.1 source 172.31.1.1</b>                           <br>
Type escape sequence to abort.                                              <br>
Tracing the route to 172.30.1.1                                             <br>
VRF info: (vrf in name/id, vrf out name/id)                                 <br>
&nbsp;&nbsp;1 10.10.78.1 788 msec 12 msec 416 msec                                    <br>
&nbsp;&nbsp;2 10.10.47.1 [MPLS: Labels 4002/2026 Exp 0] 1100 msec 144 msec 1244 msec  <br>
&nbsp;&nbsp;3 10.10.34.1 [MPLS: Labels 3000/2026 Exp 0] 460 msec 92 msec 1224 msec    <br>
&nbsp;&nbsp;4 10.10.12.2 [MPLS: Label 2026 Exp 0] 336 msec 136 msec 896 msec          <br>
&nbsp;&nbsp;5 10.10.12.1 720 msec 504 msec 708 msec <br>
R8#
</code></div>
</p>

<p>
In the output of the traceroute command, at the third hop with IP 10.10.34.1, two 
(2) MPLS labels are displayed; one label is the transport (MPLS) label and the 
other label is the VPN label. This confirms operation of MPLS L3VPN. In this case, 
the transport label is 3000 and VPN label 2026. As can be noticed, the transport
label is continually swapped as the packet is switched from hop to hop while the
VPN label travels with the packet from the nearby PE router to the remote PE 
where it finally gets popped and the packet is then redistributed into the IGP 
at the PE-CE link and routed using IP.
</p>

<h3><code style="font-size:120%;">ping</code></h3>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R8#<b>ping  172.30.1.1 source 172.31.1.1</b>                                <br>
Type escape sequence to abort.                                              <br>
Sending 5, 100-byte ICMP Echos to 172.30.1.1, timeout is 2 seconds:         <br>
Packet sent with a source address of 172.31.1.1                             <br>
!!!!!                                                                       <br>
Success rate is 100 percent (5/5), round-trip min/avg/max = 92/745/1668 ms  <br>
R8#
</code></div>
</p>
<p>
The ping command confirms the connectivity from customer site to remote customer site across the SP MPLS L3VPN.
</p>
<p>
To view the MPLS LFIB
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R7#<b>show mpls forwarding-table</b>                                       <br>
Local&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Outgoing&nbsp;&nbsp; Prefix&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Bytes Label&nbsp;&nbsp; Outgoing&nbsp;&nbsp; Next Hop   <br>
Label&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Label&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;or Tunnel Id&nbsp;&nbsp;&nbsp;&nbsp; Switched&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;interface&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;     <br>
7000&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pop Label&nbsp;&nbsp;4.4.4.4/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 3.3.3.3/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 2.2.2.2/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7003&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4006&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10.10.36.0/30&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7004&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4007&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10.10.26.0/30&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7005&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 4008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; 10.10.23.0/30&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7006&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Pop Label&nbsp;&nbsp;10.10.34.0/30&nbsp;&nbsp;&nbsp;&nbsp;0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi2/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.47.1 <br>
7007&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No Label&nbsp;&nbsp; 10.10.78.0/30[V] 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aggregate/CUST_X_HQ      <br>
7008&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No Label&nbsp;&nbsp; 172.31.1.1/32[V] 4152&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Gi1/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.78.2 <br>
7009&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No Label&nbsp;&nbsp; 172.31.2.1/32[V] 252&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Gi1/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.78.2 <br>
7010&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No Label&nbsp;&nbsp; 10.10.70.0/30[V] 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; aggregate/CUST_Z_2      <br>
7017&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No Label&nbsp;&nbsp; 172.30.1.0/24[V] 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Se5/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point2point<br>
7018&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; No Label&nbsp;&nbsp; 172.30.6.0/24[V] 0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Se5/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;point2point<br>
R7#
</code></div>
</p>
<p>
L3VPN routes have a [V] next to the learned route.

To view the FIB for the different VRFs run the command <code style="font-size:120%;"><b>show ip cef vrf &lt;vrf_name&gt;</b></code>.
</p>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R2#<b>show ip cef vrf CUST_Z_2</b>                               <br>
Prefix&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Next Hop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Interface            <br>
0.0.0.0/0&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;no route&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                    <br>
0.0.0.0/8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                    <br>
0.0.0.0/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; receive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   <br>
10.10.29.0/30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;attached&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Serial6/0            <br>
10.10.29.0/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;receive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serial6/0            <br>
10.10.29.1/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;receive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serial6/0            <br>
10.10.29.3/32&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;receive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Serial6/0            <br>
10.10.70.0/30&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.23.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GigabitEthernet0/0   <br>
127.0.0.0/8&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                    <br>
172.30.1.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.23.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GigabitEthernet0/0   <br>
172.30.2.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.29.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Serial6/0            <br>
172.30.3.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.29.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Serial6/0            <br>
172.30.5.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.29.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; Serial6/0            <br>
172.30.6.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;10.10.23.2&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; GigabitEthernet0/0   <br>
224.0.0.0/4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                    <br>
224.0.0.0/24&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; receive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   <br>
240.0.0.0/4&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;drop&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                    <br>
255.255.255.255/32&nbsp;&nbsp; receive&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;                   <br>
</code></div>
</p>
<p>
Additionally, to view the MPLS L3VPN on a specific route in the VRF LIB
</p>
<p>
<div style="background-color:#f4f0ec; border-style:solid;border-width:1px;border-color:#D3D3D3">
      	<code style="font-size:130%">
R2#<b>show ip cef vrf CUST_Z_2 172.30.6.0</b>              <br>
172.30.6.0/24                                            <br>
&nbsp;&nbsp;nexthop 10.10.23.2 GigabitEthernet0/0 label 3003 7020  <br>
R2#<b>show ip cef vrf CUST_Z_2 172.30.1.0</b>                     <br>
172.30.1.0/24                                            <br>
&nbsp;&nbsp;nexthop 10.10.23.2 GigabitEthernet0/0 label 3003 7019  <br>
R2#
</code></div>
</p>

<h1 id="TROUBLESHOOTING">Troubleshooting</h1>
<h2>LDP Adjacency</h2>
<p>
<ul>
  <li>Is LDP actually enabled: <code><b>show mpls interfaces</b></code></li>
  <li>Is LDP transport working: <code><b>dbug mpls ldp transport events</b></code></li>
  <li>Is LDP session authenticated: LDP(like BGP) uses TCP auth (option 19)</li>
</ul>
</p>
<h2>LDP Advertisements</h2>
<p>
Advertise labels for all IGP learned routes.
<ul>
<li>Are labels actually bound:
<ul>
  <li><code><b>show mpls ldp binding</b></code></li>
  <li><code><b>show mpls forwarding-table</b></code></li>
  <li><code><b>debug mpls ldp binding</b></code></li>
  <li><code><b>debug mpls ldp transport events</b></code>: able to view LDP 
  messages being exchanged. If an LDP peer does not have a route to its neighbor's 
  LDP ID, this debug command will display this appropriate message.</li>
</ul>
</li>
<li>Is allocation being filtered?:
<ul>
  <li>Advertise filter vs. allocate filter: labels can be advertised for prefixes 
  that are in a specified access-list. It is important to advertise labels for 
  all IGP learned routes.</li>
  <li>Typically only /32 needs an allocation.</li>
 </ul>
 </li>
</ul>
</p>

<h2>PE-CE Routing</h2>
<p>
<ul>
<li>Is loop prevention being violated?:
  <ul>
    <li>OSPF don-bit and domain-tag</li>
    <li>BGP AS-Path and Site-of-Origin(SoO)</li>
    <li>EIGRP Site-of-Origin</li>
  </ul>
</li>
<li>Is the VRF just hung?
  <ul>
  <li><code><b>clear ip route vrf *</b></code></li>
  <li>Forces re-import/export</li>
  </ul>
</li>
</ul>
</p>

<h2>VPNv4 BGP</h2>

<h3>Is the route-target being filtered</h3>
<p>
<ul>
  <li>Wrong import/export policy</li>
  <li>Default route-target filter</li>
  <li>VPNv4 Route reflection</li>
</ul>
<code><b>debug bgp vpnv4 unicast updates</b></code> to view debugging messages 
associated with VPNv4 failures. Critical error message is "DENIED due to: extended 
community not supported". <code><b>show vrf detail</b></code>.
</p>


<h3>Are VPNv4 routes being sent/received</h3>
<p>
<ul>
  <li><code><b>show bgp vpnv4 unicast all  </b></code></li>
  <li><code><b>show bgp vpnv4 unicast all &lt;prefix&gt; </b></code>:
  The in() and out MPLS labels of a prefix can be viewed.
  </li>
  <li><code><b>show bgp vpnv4 unicast all neighbor advertised-routes  </b></code></li>
  <li><code><b> debug bgp vpnv4 unicast updates </b></code></li>
  <li><code><b> clear bgp vpnv4 unicast * &lt;in|out&gt;</b></code></li>
</ul>
</p>

<h2>MPLS Data Plane</h2>
<p>
<li>Is the VPNv4 peering to a /32? The loopback needs to be a /32 netmask for the 
VPN data plane to work. 
  <ul>  
    <li>PHP may happen one hop too soon if peering to the wrong address. This will result 
in a traffic blackhole.</li>
<li>Problems in route summarization.</li>
</ul>
<li>Are LDP and IGP synced? LFIB can only install label for RIB.LRIB intersection</li>
</p>